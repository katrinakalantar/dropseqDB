SHOW DATABASES;
DROP DATABASE IF EXISTS dropseq2;
CREATE DATABASE dropseq2;
USE dropseq2;
SHOW TABLES;

DROP TABLE IF EXISTS Experiment;
CREATE TABLE Experiment (
  id INTEGER NOT NULL AUTO_INCREMENT,
  Name VARCHAR(30),
  Description VARCHAR(256),
  PRIMARY KEY (id),
  UNIQUE(Name)
) ENGINE=INNODB;

DROP TABLE IF EXISTS GeneSet;
CREATE TABLE GeneSet (
  id INTEGER NOT NULL AUTO_INCREMENT,
  Description VARCHAR(256),
  GeneList MEDIUMTEXT,
  PRIMARY KEY (id)
)ENGINE=INNODB;

DROP TABLE IF EXISTS AnnotationCodes;
CREATE TABLE AnnotationCodes (
  id INTEGER NOT NULL AUTO_INCREMENT,
  Annotation VARCHAR(256) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE(Annotation)
)ENGINE=INNODB;

DROP TABLE IF EXISTS Sample;
CREATE TABLE Sample (
  id INTEGER NOT NULL AUTO_INCREMENT,
  ExperimentID INTEGER NOT NULL,
  Name VARCHAR(50),
  SampleType VARCHAR(3),
  TissueType VARCHAR(20),
  Description VARCHAR(50),
  PRIMARY KEY (id),
  INDEX exp_id (ExperimentID),
  UNIQUE(Name),
  FOREIGN KEY (ExperimentID)
	REFERENCES Experiment (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)ENGINE=INNODB;

DROP TABLE IF EXISTS Cell;
CREATE TABLE Cell (
  id INTEGER NOT NULL AUTO_INCREMENT,
  SampleID INTEGER NOT NULL,
  AnnotationID INT,
  Barcode VARCHAR(30),
  OriginalExpression INT,
  NormalizedData MEDIUMTEXT,
  GeneSetID INTEGER NOT NULL,
  PRIMARY KEY (id),
  INDEX samp_id (SampleID),
  FOREIGN KEY (SampleID)
	REFERENCES Sample (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  INDEX ann_id (AnnotationID),
  FOREIGN KEY (AnnotationID)
	REFERENCES AnnotationCodes (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE 
);

DROP TABLE IF EXISTS Annotations;
CREATE TABLE Annotations(
	id INTEGER NOT NULL AUTO_INCREMENT,
	AnnotationID INTEGER NOT NULL,
	CellID INTEGER NOT NULL,
	PRIMARY KEY(id),
    INDEX ann_id (AnnotationID),
    FOREIGN KEY (AnnotationID)
	REFERENCES AnnotationCodes (id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	INDEX cell_id (CellID),
    FOREIGN KEY (CellID)
	REFERENCES Cell (id)
	ON DELETE CASCADE
	ON UPDATE CASCADE 
);






